{"version":3,"sources":["webpack://jotter/./src/hooks/useFetchMongoField.js","webpack://jotter/./src/components/Book/ReadingProgress.js","webpack://jotter/./src/components/Note/Note.js","webpack://jotter/./src/pages/book.js"],"names":["id","fetchFunction","isAuthenticated","useState","hasFetched","setHasFetched","data","setData","error","setError","loading","setLoading","user","useAuth0","useEffect","fetchData","email","result","message","Container","styled","Info","Title","ProgressBar","Description","Modal","props","out","fadeOut","fadeIn","keyframes","Input","Label","UpdateButton","Submit","percentage","isbn","isOpen","setIsOpen","outside","useRef","parseInt","progress","setProgress","inputValue","setInputValue","document","addEventListener","e","current","contains","target","ref","value","max","handlePercentage","onClick","type","pattern","placeholder","onChange","validity","patternMismatch","preventDefault","warning","updatePercentageRead","then","success","generalError","specificError","NoteContainer","Wrapper","Link","Date","title","date","noteID","bookID","to","AddNoteButton","NoNotesMessage","location","queryString","search","useFetchGoogleBook","book","fetchedBook","useFetchMongoField","getPercentageRead","read","fetchedPercentageRead","getNotes","notes","fetchedNotes","Layout","header","subheader","BookContainer","cover","author","desc","category","length","avgRating","ratings","language","username","deleteButton","redirectAfterDelete","minHeight","Loading","src","LoadingIcon","alt","className","state","color","map","note","Note","noteTitle","key","_noteID"],"mappings":"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","file":"component---src-pages-book-js-0d1eb84b7f9b811f29d7.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst useFetchMongoField = (id, fetchFunction, isAuthenticated) => {\n  const [hasFetched, setHasFetched] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { user } = useAuth0();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setHasFetched(false);\n      setLoading(true);\n      try {\n        let result = await fetchFunction(user.email, id);\n        setData(result);\n        setHasFetched(true);        \n      } catch (error) {\n        setError(error.message);\n      }\n      setLoading(false);\n    };\n    if (!isAuthenticated) {\n      setLoading(true);\n      return;\n    }\n    if (user?.email) {\n      fetchData();\n    }\n  }, [fetchFunction, id, isAuthenticated, user?.email]);\n\n  return { data, hasFetched, error, loading };\n};\n\nexport default useFetchMongoField;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { updatePercentageRead } from \"../../services/realm/API\";\nimport {\n  generalError,\n  specificError,\n  success,\n  warning,\n} from \"../Notification & Error/Notifications\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  flex-grow: 1;\n  row-gap: 1rem;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fdfdfd;\n  padding: 0.8rem 1.8rem;\n  border: var(--gray-border);\n  border-radius: var(--round);\n`;\n\nconst Info = styled.div`\n  flex-grow: 0.7;\n`;\n\nconst Title = styled.h5`\n  font-size: 1.3rem;\n  color: #333;\n  margin-bottom: 0.5rem;\n  margin-top: 0;\n`;\n\nconst ProgressBar = styled.progress`\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  overflow: hidden;\n  height: 0.7rem;\n  width: 100%;\n  background-color: #c4f1d8; // firefox\n  border-radius: var(--round);\n\n  &::-webkit-progress-bar {\n    background-color: #c4f1d8;\n  }\n\n  &::-webkit-progress-value {\n    background-color: #3aae5b;\n  }\n\n  &::-moz-progress-bar {\n    background-color: #3aae5b;\n  }\n`;\n\nconst Description = styled.p`\n  color: #3aae5b;\n  font-weight: 700;\n  margin-top: 0.5rem;\n  margin-bottom: 0;\n`;\n\nconst Modal = styled.div`\n  display: flex;\n  justify-content: space-between;\n  float: right;\n  background-color: #fdfdfd;\n  padding: 0.8rem 1.8rem;\n  margin-top: 0.5rem;\n  border: var(--gray-border);\n  box-shadow: var(--general-shadow);\n  visibility: ${(props) => (props.out ? \"hidden\" : \"visible\")};\n  animation: ${(props) => (props.out ? fadeOut : fadeIn)} 0.1s linear;\n  transition: visibility 0.1s linear;\n`;\n\nconst fadeIn = keyframes`\n  from {\n    transform: scale(0.25);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  to {\n    transform: scale(.25);\n    opacity: 0;\n  }\n`;\n\nconst Input = styled.input`\n  border: var(--gray-border);\n  font-weight: bold;\n  font-size: 1rem;\n  text-align: center;\n  max-width: 5rem;\n  color: gray;\n\n  ::placeholder {\n    text-align: center;\n    color: darkgray;\n  }\n`;\n\nconst Label = styled.label`\n  align-self: center;\n  margin-left: 0.3rem;\n  margin-right: 1rem;\n  color: #949494;\n  font-weight: 600;\n`;\n\nconst UpdateButton = styled.button`\n  background-color: transparent;\n  border: 2px solid #888;\n  color: #888;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.4rem 0.7rem;\n\n  &:hover {\n    border: 2px solid #555;\n    color: #555;\n  }\n`;\n\nconst Submit = styled.button`\n  background-color: transparent;\n  border: 2px solid #3aae5b;\n  color: #3aae5b;\n  font-weight: bold;\n  font-size: 1rem;\n  padding: 0.4rem 0.7rem;\n  margin-left: 1rem;\n\n  &:hover {\n    border: 2px solid #31944d;\n    color: #31944d;\n  }\n`;\n\nconst ReadingProgress = ({ percentage, user, isbn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const outside = useRef();\n  const [progress, setProgress] = useState(parseInt(percentage));\n  const [inputValue, setInputValue] = useState(\"\");\n  const onChange = (e) => {\n    if (!e.target.validity.patternMismatch) {\n      setInputValue(e.target.value);\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue === \"\") {\n      warning(\"You must enter a number before submitting.\");\n    }\n    else if (inputValue < 0 || inputValue > 100) {\n      warning(\"Make sure your input is a number and between 0 to 100.\");\n    } else {\n      updatePercentageRead(user, isbn, inputValue).then(\n        () => {\n          setIsOpen(false);\n          setProgress(parseInt(inputValue));\n          setInputValue(\"\");\n          success(\"Your reading progress has been updated\");\n        },\n        (error) => {\n          if (error === 400) {\n            generalError(\n              \"Invalid request: Couldn't update your reading progress.\"\n            );\n          } else {\n            specificError(\n              error,\n              \"Something went wrong. Check your internet connection and try again.\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    const handleClick = (e) => {\n      if (!outside?.current?.contains(e.target)) {\n        setIsOpen(false);\n        setInputValue(\"\");\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClick);\n  }, [outside, progress]);\n\n  function handlePercentage(progress) {\n    if (progress === 0) {\n      return \"Not read\";\n    } else if (progress === 100) {\n      return \"Completed\";\n    } else {\n      return `${progress}% read`;\n    }\n  }\n  return (\n    <div ref={outside}>\n      <Container>\n        <Info>\n          <Title>Reading Progress</Title>\n          <ProgressBar value={progress} max=\"100\" />\n          <Description>{handlePercentage(progress)}</Description>\n        </Info>\n        <UpdateButton onClick={() => setIsOpen(!isOpen)}>Update</UpdateButton>\n      </Container>\n      <Modal out={!isOpen}>\n      \n        <Input\n          type=\"text\"\n          pattern=\"^[0-9]*$\"\n          placeholder={progress}\n          onChange={onChange}\n          value={inputValue}          \n        />\n        <Label>%</Label>\n        <Submit onClick={handleSubmit}>Submit</Submit>        \n      </Modal>\n    </div>\n  );\n};\n\nexport default ReadingProgress;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nexport const NoteContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 3rem;\n  gap: 1rem;\n`;\n\nconst Wrapper = styled(Link)`  \n  padding: 1rem;\n  border: var(--purple-border);\n  border-radius: var(--round);\n\n  &:hover {\n    border: var(--purple-border-hover);\n  }\n`;\n\nconst Title = styled.h5`\n  color: #4C3E67;\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin: 0;\n  max-width: 25rem;\n`;\nconst Date = styled.h6`\n  color: #4C3E67;\n  font-size: 0.9rem;\n  font-weight: normal;\n  margin-top: 1rem;\n  margin-bottom: 0;\n`;\n\nconst NoteBlock = ({ title, date, noteID, bookID }) => {\n  return (\n    <Wrapper\n      to={`/note?book=${bookID}&note=${noteID}`}\n    >\n      <Title>{title}</Title>\n      <Date>{date}</Date>\n    </Wrapper>\n  );\n};\n\nexport default NoteBlock;\n","import React from \"react\";\nimport Layout from \"../components/Page/Layout\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoadingIcon from \"../assets/loading.svg\";\nimport { BookContainer } from \"../components/Book/BookContainer\";\nimport { Wrapper, Loading } from \"../components/Notification & Error/Loading\";\nimport useFetchGoogleBook from \"../hooks/useFetchGoogleBook\";\nimport useFetchMongoField from \"../hooks/useFetchMongoField\";\nimport { getPercentageRead, getNotes } from \"../services/realm/API\";\nimport ReadingProgress from \"../components/Book/ReadingProgress\";\nimport Header from \"../components/Page/Headings\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport NoteBlock, { NoteContainer } from \"../components/Note/Note\";\nimport { AddIcon } from \"../components/Buttons/Icons\";\nimport { RedirectHome } from \"../components/Routing\";\nimport * as queryString from \"query-string\";\n\nconst AddNoteButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  column-gap: 0.3rem;\n  background-color: white;\n  color: #6b6b6b;\n  font-weight: bold;\n  padding: 0.5rem 1rem;\n  border: var(--gray-border);\n  box-shadow: var(--general-shadow);\n\n  &:hover {\n    border: var(--gray-border-hover);\n    color: #555;\n  }\n`;\n\nconst NoNotesMessage = styled.h3`\n  color: #888;\n  font-weight: normal;\n  font-size: 1.3rem;\n  margin: 2rem auto;\n`;\nconst Book = ({ location }) => {\n  const isbn = queryString.parse(location.search).id;\n  const { isAuthenticated, user } = useAuth0();\n\n  const { data: book, hasFetched: fetchedBook } = useFetchGoogleBook(isbn);\n  const { data: read, hasFetched: fetchedPercentageRead } = useFetchMongoField(\n    isbn,\n    getPercentageRead,\n    isAuthenticated\n  );\n  const { data: notes, hasFetched: fetchedNotes } = useFetchMongoField(\n    isbn,\n    getNotes,\n    isAuthenticated\n  );\n\n  if (isbn === null) {\n    return <RedirectHome />;\n  }\n  return (\n    <Layout>\n      <Header header=\"Book\" subheader=\"In your library\" />\n\n      {fetchedBook && (\n        <BookContainer\n          cover={book.cover}\n          title={book.title}\n          author={book.author}\n          date={book.date}\n          desc={book.desc}\n          category={book.category}\n          length={book.length}\n          avgRating={book.avgRating}\n          ratings={book.ratings}\n          language={book.language}\n          isbn={book.isbn}\n          username={user.email}\n          deleteButton={true}\n          redirectAfterDelete={\"/\"}\n        >\n          {fetchedPercentageRead && (\n            <ReadingProgress\n              percentage={read}\n              isbn={book.isbn}\n              user={user.email}\n            />\n          )}\n        </BookContainer>\n      )}\n\n      {!fetchedBook && (\n        <Wrapper minHeight=\"50vh\">\n          <Loading\n            minHeight=\"30vh\"\n            src={LoadingIcon}\n            alt=\"Loading icon\"\n            className=\"rotating\"\n          />\n        </Wrapper>\n      )}\n      <Header header=\"Notes\" subheader=\"All your notes on this book\">\n        <AddNoteButton\n          to=\"/add-note\"\n          state={{\n            isbn: isbn,\n            user: user,\n          }}\n        >\n          <AddIcon color=\"#6b6b6b\" />\n          Add Note\n        </AddNoteButton>\n      </Header>\n      {fetchedNotes && (\n        <NoteContainer>\n          {notes.map((note) => {\n            return (\n              <NoteBlock\n                title={note.noteTitle}\n                date={note.date}\n                key={note._noteID}\n                noteID={note._noteID}\n                bookID={isbn}\n              />\n            );\n          })}\n          {notes.length === 0 && (\n            <NoNotesMessage>\n              You don't have any notes for this book yet.\n            </NoNotesMessage>\n          )}\n        </NoteContainer>\n      )}\n    </Layout>\n  );\n};\n\nexport default Book;\n"],"sourceRoot":""}