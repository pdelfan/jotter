{"version":3,"sources":["webpack://jotter/./src/pages/add-book.js","webpack://jotter/./src/services/googleBooks.js"],"names":["useState","books","setBooks","search","setSearch","loading","setLoading","title","header","subheader","searchBook","e","preventDefault","searchGoogleBooks","then","res","json","items","map","item","validate","catch","err","console","log","message","handleSearch","target","value","placeholder","submittable","minHeight","src","LoadingIcon","alt","className","book","i","key","to","isbn","cover","author","date","keyword","fetch","fetchGoogleBooks","bookID"],"mappings":"wMA0EA,UAjEgB,WACd,OAA0BA,cAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,GAA4BF,cAAS,IAA9BG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,eAAS,GAAhCK,EAAP,KAAgBC,EAAhB,KAoBA,OACE,gBAAC,IAAD,CAAQC,MAAM,YACZ,gBAAC,IAAD,CACEC,OAAO,WACPC,UAAU,6CAEV,gBAAC,IAAD,CACEC,WAtBW,SAACC,GAClBA,EAAEC,iBACFN,GAAW,IACXO,OAAkBV,GACfW,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GACLT,GAAW,GACX,IAAIL,EAAQc,EAAIE,MAAMC,KAAI,SAACC,GAAD,OAAUC,QAASD,MAC7CjB,GAAS,OAAID,OAEdoB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,aAW5BC,aA1Ba,SAACf,GACpBP,EAAUO,EAAEgB,OAAOC,QA0BbC,YAAY,mBACZC,aAAa,KAGjB,gBAAC,KAAD,KACGzB,GACC,gBAAC,IAAD,CACE0B,UAAU,OACVC,IAAKC,IACLC,IAAI,eACJC,UAAU,cAIZ9B,GACAJ,EAAMiB,KAAI,SAACkB,EAAMC,GACf,OACE,gBAAC,KAAD,CACEC,IAAKD,EACLE,GAAE,qBAAuBH,EAAKI,KAC9BA,KAAMJ,EAAKI,KACXC,MAAOL,EAAKK,MACZlC,MAAO6B,EAAK7B,MACZmC,OAAQN,EAAKM,OACbC,KAAMP,EAAKO,c,kCCjEpB,SAAS9B,EAAkB+B,GAChC,OAAOC,MAAM,iDACsCD,EADvC,kBAKP,SAASE,EAAiBC,GAC/B,OAAOF,MAAM,+CAA+CE,G","file":"component---src-pages-add-book-js-8e62616df9483a9fc137.js","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Page/Layout\";\nimport Header from \"../components/Page/Headings\";\nimport SearchBar from \"../components/Page/SearchBar\";\nimport BookItem, { BookList, validate } from \"../components/Book/Book\";\nimport LoadingIcon from \"../assets/loading.svg\";\nimport { Loading } from \"../components/Notification & Error/Loading\";\nimport { searchGoogleBooks } from \"../services/googleBooks\";\n\nconst AddBook = () => {\n  const [books, setBooks] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  const searchBook = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    searchGoogleBooks(search)\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        setLoading(false);\n        let books = res.items.map((item) => validate(item));\n        setBooks([...books]);\n      })\n      .catch((err) => console.log(err.message));\n  };\n\n  return (\n    <Layout title=\"Add Book\">\n      <Header\n        header=\"Add Book\"\n        subheader=\"Find a book and add it to your collection\"\n      >\n        <SearchBar\n          searchBook={searchBook}\n          handleSearch={handleSearch}\n          placeholder=\"Search for books\"\n          submittable={true}\n        />\n      </Header>\n      <BookList>\n        {loading && (\n          <Loading\n            minHeight=\"60vh\"\n            src={LoadingIcon}\n            alt=\"Loading icon\"\n            className=\"rotating\"\n          />\n        )}\n\n        {!loading &&\n          books.map((book, i) => {\n            return (\n              <BookItem\n                key={i}\n                to={`/searched-book?id=${book.isbn}`}\n                isbn={book.isbn}\n                cover={book.cover}\n                title={book.title}\n                author={book.author}\n                date={book.date}\n              />\n            );\n          })}\n      </BookList>\n    </Layout>\n  );\n};\n\nexport default AddBook;\n","export function searchGoogleBooks(keyword) {\n  return fetch(\n    `https://www.googleapis.com/books/v1/volumes?q=${keyword}&maxResults=20`\n  );\n}\n\nexport function fetchGoogleBooks(bookID) {\n  return fetch(`https://www.googleapis.com/books/v1/volumes/${bookID}`);\n}\n"],"sourceRoot":""}